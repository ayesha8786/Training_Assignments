3. Test the following principle regarding abstraction
i. if any class  has any of its method abstract then you must declare entire class abstract

Class 1= Demo.java
package Abtract;

public class Demo extends call {
	public void dispaly2()
	{	
	
	System.out.println("HI");
	}
	public static void main(String[] args)
	{
			
			Demo d= new Demo();
			d.display();
			
			
		}
	}

Class 2= Call.java
package Abtract;

abstract class call {
	 void display()
	{	
		System.out.println("hello");
	}
	}

Output: hello


ii. When we extend an abstract class ,we must override all the abstract method in subclass or declare sub class as abstract

Class 1= Demo.java

public class demo extends call {
	public void dispaly2()
	{
	
	System.out.println("HI");
	}
	public static void main(String[] args)
	{
			
			demo d= new demo();
			d.dispaly2();
			
			
		}
	}

Class 2= Call.java

package abstarct;
abstract class call {
 void display()
{
	System.out.println("hello");
}
}

Output: HI

iii. Abstarct class cannot be private
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Implicit super constructor call() is not visible for default constructor. Must define an explicit constructor


Iv . Abstarct class cannot be final
   Yes it canâ€™t be a final because final is not a access specifier


v. you can declare abstract class without abstract method
 yes we can create abstract class without a method.
